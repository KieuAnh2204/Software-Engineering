services:
  # MongoDB Database
  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
      - JWT_SECRET=your-super-secret-jwt-key
      - JWT_EXPIRATION=24h
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/user_service_db
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      - microservices-network
    restart: unless-stopped

  # Product Service
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/product_service_db
      - USER_SERVICE_URL=http://user-service:3001
    depends_on:
      - rabbitmq
      - mongodb
      - user-service
    networks:
      - microservices-network
    restart: unless-stopped

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/order_service_db
      - USER_SERVICE_URL=http://user-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
    depends_on:
      - rabbitmq
      - mongodb
      - user-service
      - product-service
    networks:
      - microservices-network
    restart: unless-stopped

  # Payment Service
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/payment_service_db
      - USER_SERVICE_URL=http://user-service:3001
      - ORDER_SERVICE_URL=http://order-service:3003
    depends_on:
      - rabbitmq
      - mongodb
      - user-service
      - order-service
    networks:
      - microservices-network
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge

volumes:
  rabbitmq_data:
  mongodb_data: